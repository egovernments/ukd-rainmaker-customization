  SearchDefinitions:
   moduleName: impactemailer
   summary: Weekly impact emailer cron
   version: 1.0.0
   definitions:
   - name: stateWideData
     query: 
      baseQuery: 
        select array_to_json(array_agg(row_to_json(stateWideReports))) FROM 
        ((SELECT (SELECT count(*) FROM ((SELECT DISTINCT tenantid FROM eg_pt_property_v2 
        WHERE (createdtime/1000) <= (extract(epoch FROM NOW())) AND tenantid != 'uk.testing') 
        UNION (SELECT DISTINCT tenantid FROM eg_tl_tradelicense WHERE (createdtime/1000) <= (extract(epoch FROM NOW())) 
        AND tenantid != 'uk.testing') UNION (SELECT DISTINCT tenantid FROM eg_pgr_service 
        WHERE (createdtime/1000) <= (extract(epoch FROM NOW())) AND tenantid != 'uk.testing')) AS tenants) as ulbCovered,
        (SELECT TRUNC(((
        SELECT SUM(pymt.totalamountpaid) FROM eg_pt_property_v2 pt INNER JOIN egcl_bill bill ON 
        pt.propertyid = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
        bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
        WHERE (pd.receiptdate/1000) <= (extract(epoch FROM NOW())) AND pt.tenantid != 'uk.testing' 
        AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED') 
        + (SELECT SUM(pymt.totalamountpaid) FROM eg_tl_tradelicense tl INNER JOIN egcl_bill bill ON 
        tl.applicationnumber = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
        bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
        WHERE (pd.receiptdate/1000) <= (extract(epoch FROM NOW())) AND tl.tenantid != 'uk.testing' 
        AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED')
        + (select sum(totalamountpaid) FROM egcl_payment p, egcl_paymentdetail pd 
        WHERE (p.createdtime/1000) <= (extract (epoch FROM NOW()))  
        AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND
        pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION'))) / 100000, 3))  as revenueCollected,
        (SELECT count(*) FROM eg_tl_tradelicense WHERE (createdtime/1000) <= (extract(epoch FROM NOW())) AND tenantid != 'uk.testing') as servicesApplied, 
        (SELECT count(*) FROM eg_user WHERE (createddate <= NOW()) AND tenantid != 'uk.testing' AND type = 'CITIZEN') as noOfUsersRegistered, 
        'Week0' as day) UNION (SELECT (SELECT count(*) FROM ((SELECT DISTINCT tenantid FROM eg_pt_property_v2 WHERE (createdtime/1000) 
        <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) 
        AND tenantid != 'uk.testing') UNION (SELECT DISTINCT tenantid FROM eg_tl_tradelicense WHERE (createdtime/1000) 
        <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) 
        AND tenantid != 'uk.testing') UNION (SELECT DISTINCT tenantid FROM eg_pgr_service WHERE (createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) 
        AND tenantid != 'uk.testing')) AS tenants) as ulbCovered,(SELECT TRUNC(((
        SELECT SUM(pymt.totalamountpaid) FROM eg_pt_property_v2 pt INNER JOIN egcl_bill bill ON 
        pt.propertyid = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
        bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
        WHERE (pymt.createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) 
        AND pt.tenantid != 'uk.testing' AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED') 
        + (SELECT SUM(pymt.totalamountpaid) FROM eg_tl_tradelicense tl INNER JOIN egcl_bill bill ON 
        tl.applicationnumber = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
        bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
        WHERE (pymt.createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800)  AND tl.tenantid != 'uk.testing' 
        AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED')
        + (select sum(totalamountpaid) FROM egcl_payment p, egcl_paymentdetail pd 
        WHERE (p.createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800)  
        AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND
        pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION'))) / 100000, 3))  as revenueCollected,
        (SELECT count(*) FROM eg_tl_tradelicense WHERE (createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) 
        AND tenantid != 'uk.testing') as servicesApplied, (SELECT count(*) FROM eg_user 
        WHERE createddate <= to_timestamp((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) 
        AND tenantid != 'uk.testing' AND type = 'CITIZEN') as noOfUsersRegistered, 'Week1' as day) 
        UNION (SELECT (SELECT count(*) FROM ((SELECT DISTINCT tenantid FROM eg_pt_property_v2 WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) 
        AND tenantid != 'uk.testing') UNION (SELECT DISTINCT tenantid FROM eg_tl_tradelicense WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2)
        AND tenantid != 'uk.testing') UNION (SELECT DISTINCT tenantid FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing')) AS tenants) 
        as ulbCovered,(SELECT TRUNC(((
        SELECT SUM(pymt.totalamountpaid) FROM eg_pt_property_v2 pt INNER JOIN egcl_bill bill ON 
        pt.propertyid = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
        bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
        WHERE (pymt.createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) 
        AND pt.tenantid != 'uk.testing' AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED') 
        + (SELECT SUM(pymt.totalamountpaid) FROM eg_tl_tradelicense tl INNER JOIN egcl_bill bill ON 
        tl.applicationnumber = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
        bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
        WHERE (pymt.createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2)  AND tl.tenantid != 'uk.testing' 
        AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED')
        + (select sum(totalamountpaid) FROM egcl_payment p, egcl_paymentdetail pd 
        WHERE (p.createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) 
        AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND
        pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION'))) / 100000, 3))  as revenueCollected,
        (SELECT count(*) FROM eg_tl_tradelicense WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing') as servicesApplied, 
        (SELECT count(*) FROM eg_user WHERE createddate <= to_timestamp((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing' AND type = 'CITIZEN') as noOfUsersRegistered, 'Week2' as day) 
        UNION (SELECT (SELECT count(*) FROM ((SELECT DISTINCT tenantid FROM eg_pt_property_v2 WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing') 
        UNION (SELECT DISTINCT tenantid FROM eg_tl_tradelicense WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing') 
        UNION (SELECT DISTINCT tenantid FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing')) AS tenants) as ulbCovered,
        (SELECT TRUNC(((
        SELECT SUM(pymt.totalamountpaid) FROM eg_pt_property_v2 pt INNER JOIN egcl_bill bill ON 
        pt.propertyid = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
        bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
        WHERE (pymt.createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) 
        AND pt.tenantid != 'uk.testing' AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED') 
        + (SELECT SUM(pymt.totalamountpaid) FROM eg_tl_tradelicense tl INNER JOIN egcl_bill bill ON 
        tl.applicationnumber = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
        bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
        WHERE (pymt.createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3)  AND tl.tenantid != 'uk.testing' 
        AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED')
        + (select sum(totalamountpaid) FROM egcl_payment p, egcl_paymentdetail pd 
        WHERE (p.createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) 
        AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND
        pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION'))) / 100000, 3))  as revenueCollected,
        (SELECT count(*) FROM eg_tl_tradelicense WHERE (createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing') as servicesApplied, (SELECT count(*) FROM eg_user WHERE createddate <= to_timestamp((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3)
        AND tenantid != 'uk.testing' AND type = 'CITIZEN') as noOfUsersRegistered, 'Week3' as day)
        UNION (SELECT (SELECT count(*) FROM ((SELECT DISTINCT tenantid FROM eg_pt_property_v2 WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing') UNION (SELECT DISTINCT tenantid FROM eg_tl_tradelicense
        WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing') UNION (SELECT DISTINCT tenantid FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing')) AS tenants) as ulbCovered,
        (SELECT TRUNC(((
        SELECT SUM(pymt.totalamountpaid) FROM eg_pt_property_v2 pt INNER JOIN egcl_bill bill ON 
        pt.propertyid = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
        bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
        WHERE (pymt.createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) 
        AND pt.tenantid != 'uk.testing' AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED') 
        + (SELECT SUM(pymt.totalamountpaid) FROM eg_tl_tradelicense tl INNER JOIN egcl_bill bill ON 
        tl.applicationnumber = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
        bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
        WHERE (pymt.createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4)  AND tl.tenantid != 'uk.testing' 
        AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED')
        + (select sum(totalamountpaid) FROM egcl_payment p, egcl_paymentdetail pd 
        WHERE (p.createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) 
        AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND
        pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION'))) / 100000, 3))  as revenueCollected,
        (SELECT count(*) FROM eg_tl_tradelicense WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4)
        AND tenantid != 'uk.testing') as servicesApplied, (SELECT count(*) FROM eg_user WHERE createddate <= to_timestamp((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing' AND type = 'CITIZEN') as noOfUsersRegistered, 
        'Week4' as day) UNION (SELECT (SELECT count(*) FROM ((SELECT DISTINCT tenantid FROM eg_pt_property_v2 WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing') 
        UNION (SELECT DISTINCT tenantid FROM eg_tl_tradelicense WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing') UNION (SELECT DISTINCT tenantid FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing')) AS tenants) as ulbCovered,
        (SELECT TRUNC(((
        SELECT SUM(pymt.totalamountpaid) FROM eg_pt_property_v2 pt INNER JOIN egcl_bill bill ON 
        pt.propertyid = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
        bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
        WHERE (pymt.createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) 
        AND pt.tenantid != 'uk.testing' AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED') 
        + (SELECT SUM(pymt.totalamountpaid) FROM eg_tl_tradelicense tl INNER JOIN egcl_bill bill ON 
        tl.applicationnumber = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
        bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
        WHERE (pymt.createdtime/1000) <= 
        ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5)  AND tl.tenantid != 'uk.testing' 
        AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED')
        + (select sum(totalamountpaid) FROM egcl_payment p, egcl_paymentdetail pd 
        WHERE (p.createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5)   
        AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND
        pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION'))) / 100000, 3))  as revenueCollected,
        (SELECT count(*) FROM eg_tl_tradelicense WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing') as servicesApplied, 
        (SELECT count(*) FROM eg_user WHERE createddate <= to_timestamp((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing' AND type = 'CITIZEN') as noOfUsersRegistered, 'Week5' as day)) stateWideReports
     searchParams:
      condition: AND
      params:
      - name: intervalinsecs
        isMandatory: true
        jsonPath: $.searchCriteria.intervalinsecs
  
     output:
      jsonFormat: {"ResponseInfo": {}}
      outJsonPath: $.data
      responseInfoPath: $.ResponseInfo

      
      
      
   - name: pgrData
     query: 
      baseQuery: select array_to_json(array_agg(row_to_json(pgrReports))) FROM ((SELECT (SELECT count(DISTINCT tenantid) as ulbCovered FROM eg_pgr_service WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing'), count(*) as totalComplaints, (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE status = 'closed' OR status = 'resolved' AND (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), 'Week0' as day FROM eg_pgr_service WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing') UNION (SELECT (SELECT count(DISTINCT tenantid) as ulbCovered FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing'), count(*) as totalComplaints, (SELECT (CASE WHEN (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing') != 0 THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE status = 'closed' OR status = 'resolved' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), 'Week1' as day FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing') UNION (SELECT (SELECT count(DISTINCT tenantid) as ulbCovered FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing'), count(*) as totalComplaints, (SELECT (CASE WHEN (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing') != 0 THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE status = 'closed' OR status = 'resolved' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), 'Week2' as day FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing') UNION (SELECT (SELECT count(DISTINCT tenantid) as ulbCovered FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing'), count(*) as totalComplaints, (SELECT (CASE WHEN (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing') != 0 THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE status = 'closed' OR status = 'resolved' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), 'Week3' as day FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing') UNION (SELECT (SELECT count(DISTINCT tenantid) as ulbCovered FROM eg_pgr_service  WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing'), count(*) as totalComplaints, (SELECT (CASE WHEN (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing') != 0 THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE status = 'closed' OR status = 'resolved' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), 'Week4' as day FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing') UNION (SELECT (SELECT count(DISTINCT tenantid) as ulbCovered FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing'), count(*) as totalComplaints, (SELECT (CASE WHEN (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing') != 0 THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE status = 'closed' OR status = 'resolved' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), 'Week5' as day FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing')) pgrReports
     searchParams:
      condition: AND
      params:
      - name: intervalinsecs
        isMandatory: true
        jsonPath: $.searchCriteria.intervalinsecs
  
     output:
      jsonFormat: {"ResponseInfo": {}}
      outJsonPath: $.data
      responseInfoPath: $.ResponseInfo      
      
      
   - name: pgrChannelData
     query: 
      baseQuery: select array_to_json(array_agg(row_to_json(pgrChannel))) FROM ((SELECT (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'ivr' AND (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as ivr), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'web' AND (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as webapp),(SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'mobileapp' AND (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as mobileapp), 'Week0' as day FROM eg_pgr_service LIMIT 1) UNION (SELECT (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'ivr' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'web' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal),(SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'mobileapp' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), 'Week1' as day FROM eg_pgr_service LIMIT 1) UNION (SELECT (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'ivr' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'web' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal),(SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'mobileapp' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), 'Week2' as day FROM eg_pgr_service LIMIT 1) UNION (SELECT (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'ivr' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'web' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'mobileapp' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), 'Week3' as day FROM eg_pgr_service LIMIT 1) UNION (SELECT (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'ivr' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'web' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'mobileapp' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), 'Week4' as day FROM eg_pgr_service LIMIT 1) UNION (SELECT (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'ivr' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'web' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), (SELECT (CASE WHEN ((SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing') != 0) THEN CONCAT(((SELECT count(*) FROM eg_pgr_service WHERE source = 'mobileapp' AND (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing') * 100 / (SELECT count(*) FROM eg_pgr_service WHERE (createdtime/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) AND tenantid != 'uk.testing')), '%') ELSE '0%' END) as redressal), 'Week5' as day FROM eg_pgr_service LIMIT 1)) pgrChannel
     searchParams:
      condition: AND
      params:
      - name: intervalinsecs
        isMandatory: true
        jsonPath: $.searchCriteria.intervalinsecs
  
     output:
      jsonFormat: {"ResponseInfo": {}}
      outJsonPath: $.data
      responseInfoPath: $.ResponseInfo
      
      
      
   - name: ptData
     query: 
      baseQuery:
                select array_to_json(array_agg(row_to_json(ptReports))) 
                FROM ((SELECT (SELECT count(DISTINCT tenantid) as ulbCovered 
                FROM eg_pt_property_v2 
                WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing'),
                TRUNC(SUM(pymt.totalamountpaid) / 100000, 3) as revenuecollected, 
                (count(DISTINCT pt.propertyid))as noofpropertiescreated, 
                'Week0' as day FROM eg_pt_property_v2 pt INNER JOIN egcl_bill bill ON 
                pt.propertyid = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
                bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
                WHERE (pd.receiptdate/1000) <= (extract(epoch FROM NOW()))
                AND pt.tenantid != 'uk.testing' AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED')
                UNION (SELECT (SELECT count(DISTINCT tenantid) as ulbCovered 
                FROM eg_pt_property_v2 WHERE (createdtime/1000)  <= (extract(epoch FROM NOW())) 
                AND tenantid != 'uk.testing'), 
                TRUNC(SUM(pymt.totalamountpaid) / 100000, 3) as revenuecollected,
                (count(DISTINCT pt.propertyid))as noofpropertiescreated, 
                'Week1' as day FROM eg_pt_property_v2 pt INNER JOIN egcl_bill bill ON 
                pt.propertyid = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
                bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
                WHERE (pd.receiptdate/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) 
                AND pt.tenantid != 'uk.testing' AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED')
                UNION (SELECT (SELECT count(DISTINCT tenantid) as ulbCovered 
                FROM eg_pt_property_v2 WHERE (createdtime/1000)  <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) 
                AND tenantid != 'uk.testing'), 
                TRUNC(SUM(pymt.totalamountpaid) / 100000, 3) as revenuecollected,
                (count(DISTINCT pt.propertyid))as noofpropertiescreated, 
                'Week2' as day FROM eg_pt_property_v2 pt INNER JOIN egcl_bill bill ON 
                pt.propertyid = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
                bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
                WHERE (pd.receiptdate/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) 
                AND pt.tenantid != 'uk.testing' AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED')
                UNION (SELECT (SELECT count(DISTINCT tenantid) as ulbCovered 
                FROM eg_pt_property_v2 WHERE (createdtime/1000)  <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) 
                AND tenantid != 'uk.testing'), 
                TRUNC(SUM(pymt.totalamountpaid) / 100000, 3) as revenuecollected,
                (count(DISTINCT pt.propertyid))as noofpropertiescreated, 
                'Week3' as day FROM eg_pt_property_v2 pt INNER JOIN egcl_bill bill ON 
                pt.propertyid = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
                bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
                WHERE (pd.receiptdate/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) 
                AND pt.tenantid != 'uk.testing' AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED')
                UNION (SELECT (SELECT count(DISTINCT tenantid) as ulbCovered 
                FROM eg_pt_property_v2 WHERE (createdtime/1000)  <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) 
                AND tenantid != 'uk.testing'), 
                TRUNC(SUM(pymt.totalamountpaid) / 100000, 3) as revenuecollected,
                (count(DISTINCT pt.propertyid))as noofpropertiescreated, 
                'Week4' as day FROM eg_pt_property_v2 pt INNER JOIN egcl_bill bill ON 
                pt.propertyid = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
                bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
                WHERE (pd.receiptdate/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) 
                AND pt.tenantid != 'uk.testing' AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED')
                UNION (SELECT (SELECT count(DISTINCT tenantid) as ulbCovered 
                FROM eg_pt_property_v2 WHERE (createdtime/1000)  <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) 
                AND tenantid != 'uk.testing'), 
                TRUNC(SUM(pymt.totalamountpaid) / 100000, 3) as revenuecollected,
                (count(DISTINCT pt.propertyid))as noofpropertiescreated, 
                'Week5' as day FROM eg_pt_property_v2 pt INNER JOIN egcl_bill bill ON 
                pt.propertyid = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
                bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
                WHERE (pd.receiptdate/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) 
                AND pt.tenantid != 'uk.testing' AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED'
                )) ptReports
     searchParams:
      condition: AND
      params:
      - name: intervalinsecs
        isMandatory: true
        jsonPath: $.searchCriteria.intervalinsecs
  
     output:
      jsonFormat: {"ResponseInfo": {}}
      outJsonPath: $.data
      responseInfoPath: $.ResponseInfo
      
      
      
   - name: tlData
     query: 
      baseQuery: 
                select array_to_json(array_agg(row_to_json(tlReports))) 
                FROM (SELECT (SELECT count(DISTINCT tenantid) as ulbCovered 
                FROM eg_tl_tradelicense 
                WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing' ), 
                count(*) as newLicenseIssued, 
                (SELECT (SELECT count(*) 
                FROM eg_tl_tradelicense 
                WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND applicationtype = 'NEW' AND tenantid != 'uk.testing')) as newLicense, 
                (SELECT (SELECT count(*) 
                FROM eg_tl_tradelicense 
                WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND applicationtype = 'RENEWAL' AND tenantid != 'uk.testing')) as renewalLicense,
                (SELECT (SELECT count(*) 
                FROM eg_tl_tradelicense 
                WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND applicationtype = 'RENEWAL' and status='APPROVED' AND tenantid != 'uk.testing')) as renewalLicenseIssued, 
                (SELECT TRUNC((SELECT SUM(pymt.totalamountpaid) FROM eg_tl_tradelicense tl INNER JOIN egcl_bill bill ON 
                tl.applicationnumber = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
                bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
                WHERE (pd.receiptdate/1000)  <= (extract (epoch FROM NOW()))
                AND tl.tenantid != 'uk.testing' 
                AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED') / 100000, 3))  as revenueCollected,
                count(*) as receiptscreated,
                'Week0' as day FROM eg_tl_tradelicense 
                WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing' 
                AND status = 'APPROVED' AND applicationtype = 'NEW'  UNION SELECT (SELECT count(DISTINCT tenantid) as ulbCovered 
                FROM eg_tl_tradelicense WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing' 
                AND tenantid != 'uk.testing'), count(*) as newLicenseIssued, 
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing' 
                AND applicationtype = 'NEW' AND tenantid != 'uk.testing')) as newLicense,
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND tenantid != 'uk.testing' 
                AND applicationtype = 'RENEWAL' AND tenantid != 'uk.testing')) as renewalLicense,
                (SELECT (SELECT count(*)
                FROM eg_tl_tradelicense 
                WHERE (createdtime/1000) <= (extract (epoch FROM NOW())) AND applicationtype = 'RENEWAL' and status='APPROVED' AND tenantid != 'uk.testing')) as renewalLicenseIssued, 
                (SELECT TRUNC((SELECT SUM(pymt.totalamountpaid) FROM eg_tl_tradelicense tl INNER JOIN egcl_bill bill ON 
                tl.applicationnumber = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
                bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
                WHERE (pd.receiptdate/1000) <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800)  AND tl.tenantid != 'uk.testing' 
                AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED') / 100000, 3)) as revenueCollected,
                count(*) as receiptscreated,
                'Week1' as day FROM eg_tl_tradelicense WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing' 
                AND status = 'APPROVED' AND applicationtype = 'NEW'  UNION SELECT (SELECT count(DISTINCT tenantid) as ulbCovered FROM eg_tl_tradelicense  
                WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) AND tenantid != 'uk.testing'), 
                count(*) as newLicenseIssued, 
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) 
                AND applicationtype = 'NEW' AND tenantid != 'uk.testing')) as newLicense,
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) 
                AND applicationtype = 'RENEWAL' AND tenantid != 'uk.testing')) as renewalLicense,
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) 
                AND applicationtype = 'RENEWAL' AND status ='APPROVED' AND tenantid != 'uk.testing')) as renewalLicenseIssued,
                (SELECT TRUNC((SELECT SUM(pymt.totalamountpaid) FROM eg_tl_tradelicense tl INNER JOIN egcl_bill bill ON 
                tl.applicationnumber = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
                bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
                WHERE (pd.receiptdate/1000)  <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) 
                AND tl.tenantid != 'uk.testing' 
                AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED') / 100000, 3))  as revenueCollected,
                count(*) as receiptscreated,
                'Week2' as day FROM eg_tl_tradelicense WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) 
                AND tenantid != 'uk.testing'  AND status = 'APPROVED' AND applicationtype = 'NEW'  
                UNION SELECT (SELECT count(DISTINCT tenantid) as ulbCovered 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2)
                AND tenantid != 'uk.testing'), count(*) as newLicenseIssued,
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) 
                AND applicationtype = 'NEW' AND tenantid != 'uk.testing')) as newLicense,
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) 
                AND applicationtype = 'RENEWAL' AND tenantid != 'uk.testing')) as renewalLicense,
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) 
                AND applicationtype = 'RENEWAL' AND status ='APPROVED' AND tenantid != 'uk.testing')) as renewalLicenseIssued,
                (SELECT TRUNC((SELECT SUM(pymt.totalamountpaid) FROM eg_tl_tradelicense tl INNER JOIN egcl_bill bill ON 
                tl.applicationnumber = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
                bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
                WHERE (pd.receiptdate/1000)  <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) 
                AND tl.tenantid != 'uk.testing' 
                AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED') / 100000, 3))  as revenueCollected,
                count(*) as receiptscreated,
                'Week3' as day FROM eg_tl_tradelicense 
                WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) AND tenantid != 'uk.testing' 
                AND status = 'APPROVED' AND applicationtype = 'NEW'  UNION SELECT (SELECT count(DISTINCT tenantid) as ulbCovered 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) 
                AND tenantid != 'uk.testing'), count(*) as newLicenseIssued, 
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) 
                AND applicationtype = 'NEW' AND tenantid != 'uk.testing')) as newLicense,
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) 
                AND applicationtype = 'RENEWAL' AND tenantid != 'uk.testing')) as renewalLicense,
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3) 
                AND applicationtype = 'RENEWAL' AND status ='APPROVED' AND tenantid != 'uk.testing')) as renewalLicenseIssued,
                (SELECT TRUNC((SELECT SUM(pymt.totalamountpaid) FROM eg_tl_tradelicense tl INNER JOIN egcl_bill bill ON 
                tl.applicationnumber = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
                bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
                WHERE (pd.receiptdate/1000)  <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) 
                AND tl.tenantid != 'uk.testing' 
                AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED') / 100000, 3))  as revenueCollected,
                count(*) as receiptscreated,
                'Week4' as day FROM eg_tl_tradelicense WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) 
                AND tenantid != 'uk.testing'  AND status = 'APPROVED' AND applicationtype = 'NEW'  
                UNION SELECT (SELECT count(DISTINCT tenantid) as ulbCovered FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) 
                AND tenantid != 'uk.testing'), count(*) as newLicenseIssued, 
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) 
                AND applicationtype = 'NEW' AND tenantid != 'uk.testing')) as newLicense,
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) 
                AND applicationtype = 'RENEWAL' AND tenantid != 'uk.testing')) as renewalLicense,
                (SELECT( SELECT count(*) 
                FROM eg_tl_tradelicense  WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) 
                AND applicationtype = 'RENEWAL' AND status ='APPROVED' AND tenantid != 'uk.testing')) as renewalLicenseIssued,
                (SELECT TRUNC((SELECT SUM(pymt.totalamountpaid) FROM eg_tl_tradelicense tl INNER JOIN egcl_bill bill ON 
                tl.applicationnumber = bill.consumercode INNER JOIN egcl_paymentdetail pd ON 
                bill.id = pd.billid INNER JOIN egcl_payment pymt ON pd.paymentid = pymt.id 
                WHERE (pd.receiptdate/1000)  <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) 
                AND tl.tenantid != 'uk.testing' 
                AND pymt.paymentstatus != 'Cancelled' AND bill.status != 'CANCELLED') / 100000, 3))  as revenueCollected,
                count(*) as receiptscreated,
                'Week5' as day FROM eg_tl_tradelicense WHERE (createdtime/1000) <= 
                ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5)
                AND tenantid != 'uk.testing'  AND status = 'APPROVED' AND applicationtype = 'NEW' ) tlReports
     searchParams:
      condition: AND
      params:
      - name: intervalinsecs
        isMandatory: true
        jsonPath: $.searchCriteria.intervalinsecs
  
     output:
      jsonFormat: {"ResponseInfo": {}}
      outJsonPath: $.data
      responseInfoPath: $.ResponseInfo    

   - name: miscCollections
     query: 
      baseQuery:    select array_to_json(array_agg(row_to_json(mcReports))) 
                    FROM (SELECT (
                    SELECT TRUNC(sum(totalamountpaid)/ 100000, 3) as revenuecollected 
                    FROM egcl_payment p, egcl_paymentdetail pd 
                    WHERE (p.createdtime/1000) <= (extract (epoch FROM NOW()))  
                    AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION')), 
                    count(*) as receiptscreated,
                    count(distinct p.tenantid) as ulbcovered, 
                    'Week0' as day FROM egcl_payment p, egcl_paymentdetail pd WHERE (p.createdtime/1000) <= (extract (epoch FROM NOW()))    
                    AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION') 
                    UNION SELECT 
                    (SELECT TRUNC(sum(totalamountpaid)/ 100000, 3) as revenuecollected FROM egcl_payment p, egcl_paymentdetail pd  WHERE (p.createdtime/1000) <= 
                    ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800)   
                    AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION') ), 
                    count(*) as receiptscreated, 
                    count(distinct p.tenantid) as ulbcovered,
                    'Week1' as day FROM egcl_payment p, egcl_paymentdetail pd WHERE (p.createdtime/1000) 
                    <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800) 
                    AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION') 
                    UNION SELECT 
                    (SELECT TRUNC(sum(totalamountpaid)/ 100000, 3) as revenuecollected FROM egcl_payment p, egcl_paymentdetail pd  WHERE (p.createdtime/1000) 
                    <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2)  
                    AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION') ), 
                    count(*) as receiptscreated, 
                    count(distinct p.tenantid) as ulbcovered,
                    'Week2' as day FROM egcl_payment p, egcl_paymentdetail pd WHERE (p.createdtime/1000) 
                    <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 2) 
                    AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION') 
                    UNION SELECT 
                    (SELECT TRUNC(sum(totalamountpaid)/ 100000, 3) as revenuecollected FROM egcl_payment p, egcl_paymentdetail pd  WHERE (p.createdtime/1000) 
                    <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3)
                    AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION') ), 
                    count(*) as receiptscreated, 
                    count(distinct p.tenantid) as ulbcovered,
                    'Week3' as day FROM egcl_payment p, egcl_paymentdetail pd WHERE (p.createdtime/1000) 
                    <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 3)  
                    AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION') 
                    UNION SELECT 
                    (SELECT TRUNC(sum(totalamountpaid)/ 100000, 3) as revenuecollected FROM egcl_payment p, egcl_paymentdetail pd  WHERE (p.createdtime/1000) 
                    <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) 
                    AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION') ), 
                    count(*) as receiptscreated, 
                    count(distinct p.tenantid) as ulbcovered,
                    'Week4' as day FROM egcl_payment p, egcl_paymentdetail pd WHERE (p.createdtime/1000) 
                    <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 4) 
                    AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION')   
                    UNION SELECT 
                    (SELECT TRUNC(sum(totalamountpaid)/ 100000, 3) as revenuecollected FROM egcl_payment p, egcl_paymentdetail pd  WHERE (p.createdtime/1000) 
                    <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) 
                    AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION') ), 
                    count(*) as receiptscreated, 
                    count(distinct p.tenantid) as ulbcovered,
                    'Week5' as day FROM egcl_payment p, egcl_paymentdetail pd WHERE (p.createdtime/1000) 
                    <= ((extract (epoch FROM (to_timestamp(CONCAT(CURRENT_DATE + integer '1'), 'YYYY-MM-DD H24:MI:SS')))) - 604800 * 5) 
                    AND p.id=pd.paymentid AND p.paymentstatus != 'Cancelled' AND p.tenantid!='uk.testing' AND pd.businessservice not in ('PT','TL','WC','FIRENOC','PT.MUTATION') )  mcReports
     searchParams:
      condition: AND
      params:
      - name: intervalinsecs
        isMandatory: true
        jsonPath: $.searchCriteria.intervalinsecs
  
     output:
      jsonFormat: {"ResponseInfo": {}}
      outJsonPath: $.data
      responseInfoPath: $.ResponseInfo       
