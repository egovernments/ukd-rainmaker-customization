ReportDefinitions:
  - reportName: MiscReceipt
    summary: Receipt Register Miscellaneous
    version: 1.0.0
    moduleName: rainmaker-uc
    sourceColumns:
      - name: ulb
        label: reports.uc.ulb
        type: string
        source: uc
        total: false
      - name: receiptnumber
        label: reports.uc.receiptnumber
        type: string
        source: uc
        total: false
      - name: receiptdate
        label: reports.uc.receiptdate
        type: string
        source: uc
        total: false
      - name: g8issuedate
        label: reports.uc.g8issuedate
        type: string
        source: uc
        total: false
      - name: g8receiptno
        label: reports.uc.g8receiptno
        type: string
        source: uc
        total: false
      - name: status
        label: reports.uc.receiptstatus
        type: string
        source: uc
        total: false
      - name: servicecategory
        label: reports.uc.businessdetails
        type: string
        source: uc
        total: false
      - name: cgst
        label: reports.uc.cgst
        type: string
        source: uc
        total: true
      - name: tax
        label: reports.uc.tax
        type: string
        source: uc
        total: true
      - name: fieldcollection
        label: reports.uc.fieldcollection
        type: string
        source: uc
        total: true
      - name: sgst
        label: reports.uc.sgst
        type: string
        source: uc
        total: true
      - name: ddorchequenumber
        label: reports.uc.ddorchequenumber
        type: string
        source: uc
        total: false
      - name: collectiontype
        label: reports.uc.collectiontype
        type: string
        source: uc
        total: false
      - name: collectorname
        label: reports.uc.collectorname
        type: string
        source: uc
        total: false
      - name: totalamount
        label: reports.uc.totalamount
        type: string
        source: uc
        total: true
      - name: paymentmode
        label: reports.uc.paymentmode
        type: string
        source: uc
        total: false
    searchParams:
      - name: fromDate
        label: reports.uc.fromDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate >= $fromDate
      - name: toDate
        label: reports.uc.toDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate <= $toDate
      - name: ulb
        label: reports.uc.ulb
        type: singlevaluelist
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
        source: uc
        wrapper: true
        isMandatory: false
        searchClause: AND rh.tenantid = $ulb
    query: |
        -- Use CTE to force query plan, compute & use CTE later
        WITH receipt_breakup AS (
                    SELECT 
                      receiptheader, 
                      SUM(CASE WHEN taxheadcode LIKE '%_CGST' THEN adjustedamount ELSE 0 END) as cgst, 
                      SUM(CASE WHEN taxheadcode LIKE '%_TAX' THEN adjustedamount ELSE 0 END) as tax, 
                      SUM(CASE WHEN taxheadcode LIKE '%_SGST' THEN adjustedamount ELSE 0 END) as sgst, 
                      SUM(CASE WHEN taxheadcode LIKE '%_FIELD_FEE' THEN adjustedamount ELSE 0 END) as fieldcollection            
                    FROM egcl_receiptdetails_v1 as rd
                    INNER JOIN egcl_receiptheader_v1 as rh on rh.id = rd.receiptheader
                    GROUP BY rd.receiptheader
        )
        SELECT 
          rh.tenantid as ulb,
          rh.receiptnumber as receiptnumber,
          To_char((To_timestamp(rh.receiptdate / 1000) at time Zone 'Asia/Kolkata'), 'DD/MM/YYYY') as receiptdate,
          To_char((To_timestamp(rh.manualreceiptdate / 1000) at time Zone 'Asia/Kolkata'), 'DD/MM/YYYY') as g8issuedate,
          rh.manualreceiptnumber as g8receiptno,
          rh.status as status,
          businessdetails as servicecategory,
          receipt_breakup.*,  
          amount as totalamount, 
          instrumenttype as paymentmode,
          (case when instrumenttype like 'Cash' then '' else  transactionnumber end) as ddorchequenumber,
          'System' as collectiontype,
          eg_user.name as collectorname
        FROM egcl_receiptheader_v1 AS rh
        JOIN egcl_receiptinstrument_v1 AS ri ON rh.id = ri.receiptheader
        JOIN egcl_instrumentheader_v1 AS ih ON ih.id = ri.instrumentheader
        JOIN receipt_breakup ON rh.id = receipt_breakup.receiptheader
        JOIN eg_user ON rh.createdby::INTEGER=eg_user.id
        WHERE  rh.status != 'Cancelled'  AND rh.tenantid!='uk.testing' AND receiptnumber like 'MP%'
    orderby: ORDER BY rh.receiptdate DESC

  - reportName: MiscReceiptULB
    summary: Receipt Register Miscellaneous
    version: 1.0.0
    moduleName: rainmaker-uc
    additionalConfig:
      print:
        pdfPageSize: "A3"
    sourceColumns:
      - name: ulb
        label: reports.uc.ulb
        type: string
        source: uc
        total: false
      - name: receiptnumber
        label: reports.uc.receiptnumber
        type: string
        source: uc
        total: false
      - name: receiptdate
        label: reports.uc.receiptdate
        type: string
        source: uc
        total: false
      - name: g8issuedate
        label: reports.uc.g8issuedate
        type: string
        source: uc
        total: false
      - name: g8receiptno
        label: reports.uc.g8receiptno
        type: string
        source: uc
        total: false
      - name: status
        label: reports.uc.receiptstatus
        type: string
        source: uc
        total: false
      - name: Businesservice
        label: reports.uc.businessdetails
        type: string
        source: uc
        total: false
      - name: cgst
        label: reports.uc.cgst
        type: string
        source: uc
        total: true
      - name: tax
        label: reports.uc.tax
        type: string
        source: uc
        total: true
      - name: fieldcollection
        label: reports.uc.fieldcollection
        type: string
        source: uc
        total: true
      - name: sgst
        label: reports.uc.sgst
        type: string
        source: uc
        total: true
      - name: ddorchequenumber
        label: reports.uc.ddorchequenumber
        type: string
        source: uc
        total: false
      - name: ddchequedate
        label: reports.uc.ddorchequedate
        type: string
        source: uc
        total: false
      - name: bankname
        label: reports.uc.bankname
        type: string
        source: uc
        total: false
      - name: branchname
        label: reports.uc.branchname
        type: string
        source: uc
        total: false
      - name: collectiontype
        label: reports.uc.collectiontype
        type: string
        source: uc
        total: false
      - name: collectorname
        label: reports.uc.collectorname
        type: string
        source: uc
        total: false
      - name: totalamount
        label: reports.uc.totalamount
        type: string
        source: uc
        total: true
      - name: paymentmode
        label: reports.uc.paymentmode
        type: string
        source: uc
        total: false
    searchParams:
      - name: fromDate
        label: reports.uc.fromDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate >= $fromDate
      - name: toDate
        label: reports.uc.toDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate <= $toDate
      - name: businessservice
        label: reports.uc.businessservice
        type: singlevaluelist
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?moduleName=BillingService&masterName=BusinessService&tenantId=$tenantid|$.MdmsRes.BillingService.BusinessService[*].code|$.MdmsRes.BillingService.BusinessService[*].name
        source: uc
        wrapper: true
        isMandatory: false
        searchClause: AND rh.businessservice = $businessservice
      - name: collectorname
        label: reports.uc.collectorname
        type: singlevaluelist
        pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=UC_EMP|$.Employees[*].user.id|$.Employees[*].user.name
        source: uc
        wrapper: true
        isMandatory: false
        searchClause: AND eg_user.id = $collectorname::INTEGER
    query: |
        -- Use CTE to force query plan, compute & use CTE later
        WITH receipt_breakup AS (
                    SELECT 
                      ba.billdetailid as receiptheader, 
                      SUM(CASE WHEN taxheadcode LIKE '%_CGST' THEN adjustedamount ELSE 0 END) as cgst, 
                      SUM(CASE WHEN taxheadcode LIKE '%_TAX' THEN adjustedamount ELSE 0 END) as tax, 
                      SUM(CASE WHEN taxheadcode LIKE '%_SGST' THEN adjustedamount ELSE 0 END) as sgst, 
                      SUM(CASE WHEN taxheadcode LIKE '%_FIELD_FEE' THEN adjustedamount ELSE 0 END) as fieldcollection            
                    FROM egcl_billaccountdetail as ba
                    INNER JOIN egcl_billdetial as bd on bd.id=ba.billdetailid
                    GROUP BY ba.billdetailid
        )
        SELECT DISTINCT
          initcap(split_part(rh.tenantid, '.', 2)) as ulb,
          bi.consumercode as receiptnumber,
          To_char((To_timestamp(rh.receiptdate / 1000) at time Zone 'Asia/Kolkata'), 'DD/MM/YYYY') as receiptdate,
          (select message from message where locale ='en_IN'and code =(CONCAT('BILLINGSERVICE_BUSINESSSERVICE_',UPPER(replace(replace(rh.businessservice,'-','_'),'.','_'))))) as Businesservice,
          receipt_breakup.*,
          (case when py.paymentmode like 'CASH' then '' else  transactionnumber end) as ddorchequenumber,
          bi.totalamount as TotalAmount,
          eg_user.name as collectorname,
          py.paymentmode as paymentMode,
          bi.status as status
        FROM egcl_payment as py
        JOIN egcl_paymentdetail AS rh ON py.id=rh.paymentid
        JOIN egcl_bill as bi ON bi.id=rh.billid
        JOIN egcl_billdetial as bd ON bd.billid=bi.id
        JOIN receipt_breakup ON bd.id = receipt_breakup.receiptheader
        JOIN egcl_billaccountdetail as ba ON bd.id=ba.billdetailid
        JOIN eg_user ON py.createdby::INTEGER=eg_user.id
        WHERE  bi.status != 'CANCELLED'  AND bi.consumercode like 'UC%'
        AND rh.tenantid=$tenantid AND rh.tenantid != 'uk.testing'
    orderby: ORDER BY receiptdate DESC

  - reportName: MiscReceiptStateWide
    summary: State Receipt Register Miscellaneous
    version: 1.0.0
    moduleName: rainmaker-uc
    sourceColumns:
      - name: ulb
        label: reports.uc.ulb
        type: string
        source: uc
        total: false
      - name: servicecategory
        label: reports.uc.businessdetails
        type: string
        source: uc
        total: false
      - name: cgst
        label: reports.uc.cgst
        type: string
        source: uc
        total: true
      - name: tax
        label: reports.uc.tax
        type: string
        source: uc
        total: true
      - name: fieldcollection
        label: reports.uc.fieldcollection
        type: string
        source: uc
        total: true
      - name: sgst
        label: reports.uc.sgst
        type: string
        source: uc
        total: true
      - name: totalamount
        label: reports.uc.totalamount
        type: string
        source: uc
        total: true
    searchParams:
      - name: fromDate
        label: reports.uc.fromDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate >= $fromDate
      - name: toDate
        label: reports.uc.toDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate <= $toDate
      - name: ulb
        label: reports.uc.ulb
        type: singlevaluelist
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
        source: uc
        wrapper: true
        isMandatory: false
        searchClause: AND rh.tenantid = $ulb
    query: |
        -- Use CTE to force query plan, compute & use CTE later
        SELECT 
          initcap(split_part(rh.tenantid, '.', 2)) as ulb,
          rh.businessservice as servicecategory,count(*) as receipts,
          SUM(CASE WHEN taxheadcode LIKE '%_FIELD_FEE' THEN adjustedamount ELSE 0 END) as fieldcollection,
          SUM(CASE WHEN taxheadcode LIKE '%_TAX' THEN adjustedamount ELSE 0 END) as tax, 
          SUM(CASE WHEN taxheadcode LIKE '%_CGST' THEN adjustedamount ELSE 0 END) as cgst, 
          SUM(CASE WHEN taxheadcode LIKE '%_SGST' THEN adjustedamount ELSE 0 END) as sgst, 
          sum(totalamount) as totalamount
        from egcl_payment as py
        JOIN egcl_paymentdetail AS rh ON py.id=rh.paymentid
        JOIN egcl_bill as bi ON bi.id=rh.billid
        JOIN egcl_billdetial as bd ON bd.billid=bi.id
        JOIN egcl_billaccountdetail as ba ON bd.id=ba.billdetailid
        WHERE bi.status != 'CANCELLED'  AND bi.consumercode like 'UC%'
        and rh.tenantid != 'uk.testing'
     groupby: group by rh.tenantid,rh.businessservice
     orderby: order by rh.tenantid

  - reportName: MiscReceiptState
    summary: State Miscellaneous Receipt Register 
    version: 1.0.0
    moduleName: rainmaker-uc
    sourceColumns:
      - name: ulb
        label: reports.uc.ulb
        type: string
        source: uc
        total: false
      - name: noofreceipts
        label: reports.uc.noOfReceipts
        type: string
        source: uc
        total: true
      - name: tax
        label: reports.uc.tax
        type: string
        source: uc
        total: true
      - name: cgst
        label: reports.uc.cgst
        type: string
        source: uc
        total: true
      - name: sgst
        label: reports.uc.sgst
        type: string
        source: uc
        total: true
      - name: fieldcollection
        label: reports.uc.fieldCollection
        type: string
        source: uc
        total: true
      - name: totalamount
        label: reports.uc.totalamount
        type: string
        source: uc
        total: true
    searchParams:
      - name: fromDate
        label: reports.uc.fromDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate >= $fromDate
      - name: toDate
        label: reports.uc.toDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate <= $toDate
      - name: ulb
        label: reports.uc.ulb
        type: singlevaluelist
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
        source: uc
        wrapper: true
        isMandatory: false
        searchClause: AND rh.tenantid = $ulb
    query: |
        -- Use CTE to force query plan, compute & use CTE later
        SELECT
          rh.tenantid as ulb,
          count(*) as noofreceipts,
          SUM(CASE WHEN taxheadcode LIKE '%_TAX' THEN adjustedamount ELSE 0 END) as tax, 
          SUM(CASE WHEN taxheadcode LIKE '%_CGST' THEN adjustedamount ELSE 0 END) as cgst, 
          SUM(CASE WHEN taxheadcode LIKE '%_SGST' THEN adjustedamount ELSE 0 END) as sgst, 
          SUM(CASE WHEN taxheadcode LIKE '%_FIELD_FEE' THEN adjustedamount ELSE 0 END) as fieldcollection,
          sum(amount) as totalamount
        from egcl_receiptheader_v1 rh, egcl_receiptdetails_v1 as rd
        WHERE rh.id=rd.receiptheader and rh.status != 'Cancelled' AND rh.tenantid!='uk.testing' AND receiptnumber like 'MP%' 
    groupby: group by rh.tenantid



  - reportName: MiscCollectionState
    summary: State Miscellaneous Collection Register 
    version: 1.0.0
    moduleName: rainmaker-uc
    sourceColumns:
      - name: ulb
        label: reports.uc.ulb
        type: string
        source: uc
        total: false
      - name: offlinetransactions
        label: reports.uc.noOfOfflineTransactions
        type: string
        source: uc
        total: true
      - name: onlinetransactions
        label: reports.uc.noOfOnlineTransactions
        type: string
        source: uc
        total: true
      - name: totaltransactions
        label: reports.uc.totalTransactions
        type: string
        source: uc
        total: true
      - name: offlinecollection
        label: reports.uc.offlineCollection
        type: string
        source: uc
        total: true
      - name: onlinecollection
        label: reports.uc.onlineCollection
        type: string
        source: uc
        total: true
      - name: totalcollection
        label: reports.uc.totalCollection
        type: string
        source: uc
        total: true
    searchParams:
      - name: fromDate
        label: reports.uc.fromDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate >= $fromDate
      - name: toDate
        label: reports.uc.toDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate <= $toDate
      - name: ulb
        label: reports.uc.ulb
        type: singlevaluelist
        pattern: http://egov-mdms-service:8080/egov-mdms-service/v1/_get?tenantId=$tenantid&moduleName=tenant&masterName=tenants|$.MdmsRes.tenant.tenants.*.code|$.MdmsRes.tenant.tenants.*.name
        source: uc
        wrapper: true
        isMandatory: false
        searchClause: AND rh.tenantid = $ulb
    query: |
        -- Use CTE to force query plan, compute & use CTE later
        SELECT
          initcap(split_part(rh.tenantId, '.', 2)) as ulb,
          count(*) FILTER (where collectiontype='COUNTER') as offlinetransactions,
          count(*) FILTER (where collectiontype='ONLINE') as onlinetransactions,
          count(*) as totaltransactions,
          sum(case collectiontype when 'COUNTER' then ih.amount else 0 end) as offlinecollection,
          sum(case collectiontype when 'ONLINE' then ih.amount else 0 end) as onlinecollection,
          sum(ih.amount) as totalcollection
        from egcl_receiptheader_v1 as rh
        inner join egcl_receiptinstrument_v1 as ri on ri.receiptheader = rh.id
        inner join egcl_instrumentheader_v1 as ih on ih.id = ri.instrumentheader
        where rh.receiptnumber like 'MP%' and rh.status !='Cancelled' and rh.tenantid !='uk.testing'
    groupby: GROUP BY rh.tenantid
    orderby: ORDER BY rh.tenantId asc

  - reportName: MiscBusinessServiceCollectionTenant
    summary: Miscellaneous Business Service Collection 
    version: 1.0.0
    moduleName: rainmaker-uc
    sourceColumns:
      - name: servicetype
        label: reports.uc.serviceType
        type: string
        source: uc
        total: false      
      - name: totalreceipts
        label: reports.uc.totalReceipts
        type: string
        source: uc
        total: true
      - name: tax
        label: reports.uc.tax
        type: string
        source: uc
        total: true
      - name: cgst
        label: reports.uc.cgst
        type: string
        source: uc
        total: true
      - name: sgst
        label: reports.uc.sgst
        type: string
        source: uc
        total: true
      - name: fieldcollection
        label: reports.uc.fieldCollection
        type: string
        source: uc
        total: true
      - name: totalcollection
        label: reports.uc.totalCollection
        type: string
        source: uc
        total: true
    searchParams:
      - name: fromDate
        label: reports.uc.fromDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate >= $fromDate
      - name: toDate
        label: reports.uc.toDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate <= $toDate
    query: |
        -- Use CTE to force query plan, compute & use CTE later
        SELECT
          (select message from message where locale ='en_IN'and code =(CONCAT('BILLINGSERVICE_BUSINESSSERVICE_',UPPER(replace(replace(rh.businessservice,'-','_'),'.','_'))))) as servicetype,
          count(distinct rh.id) as totalreceipts,
          SUM(CASE WHEN taxheadcode LIKE '%_TAX' THEN adjustedamount ELSE 0 END) as tax,
          SUM(CASE WHEN taxheadcode LIKE '%_CGST' THEN adjustedamount ELSE 0 END) as cgst,
          SUM(CASE WHEN taxheadcode LIKE '%_SGST' THEN adjustedamount ELSE 0 END) as sgst,
          SUM(CASE WHEN taxheadcode LIKE '%_FIELD_FEE' THEN adjustedamount ELSE 0 END) as fieldcollection,
          (SUM(CASE WHEN taxheadcode LIKE '%_TAX' THEN adjustedamount ELSE 0 END)  + SUM(CASE WHEN taxheadcode LIKE '%_CGST' THEN adjustedamount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE '%_SGST' THEN adjustedamount ELSE 0 END) +SUM(CASE WHEN taxheadcode LIKE '%_FIELD_FEE' THEN adjustedamount ELSE 0 END) )as totalcollection
        FROM egcl_billaccountdetail as ba, egcl_paymentdetail AS rh
        JOIN egcl_bill as bi ON bi.id=rh.billid
        JOIN egcl_billdetial as bd ON bd.billid=bi.id
        WHERE bd.id=ba.billdetailid and bd.billid=bi.id and bi.id=rh.billid and bi.status != 'CANCELLED' AND rh.tenantid=$tenantid AND rh.tenantid != 'uk.testing' AND  bi.consumercode like 'UC%'
    groupby:   GROUP BY rh.businessservice
    orderby:   ORDER BY rh.businessservice

  - reportName: MiscReceiptULBCancelled
    summary: Cancelled Receipt Miscellaneous
    version: 1.0.0
    moduleName: rainmaker-uc
    additionalConfig:
      print:
        pdfPageSize: "A3"
    sourceColumns:
      - name: ulb
        label: reports.uc.ulb
        type: string
        source: uc
        total: false
      - name: receiptnumber
        label: reports.uc.receiptnumber
        type: string
        source: uc
        total: false
      - name: receiptdate
        label: reports.uc.receiptdate
        type: string
        source: uc
        total: false
      - name: Businesservice
        label: reports.uc.businessdetails
        type: string
        source: uc
        total: false
      - name: cgst
        label: reports.uc.cgst
        type: string
        source: uc
        total: true
      - name: tax
        label: reports.uc.tax
        type: string
        source: uc
        total: true
      - name: fieldcollection
        label: reports.uc.fieldcollection
        type: string
        source: uc
        total: true
      - name: sgst
        label: reports.uc.sgst
        type: string
        source: uc
        total: true
      - name: ddorchequenumber
        label: reports.uc.ddorchequenumber
        type: string
        source: uc
        total: false
      - name: ddchequedate
        label: reports.uc.ddorchequedate
        type: string
        source: uc
        total: false
      - name: collectiontype
        label: reports.uc.collectiontype
        type: string
        source: uc
        total: false
      - name: collectorname
        label: reports.uc.collectorname
        type: string
        source: uc
        total: false
      - name: totalamount
        label: reports.uc.totalamount
        type: string
        source: uc
        total: true
      - name: paymentmode
        label: reports.uc.paymentmode
        type: string
        source: uc
        total: false
    searchParams:
      - name: fromDate
        label: reports.uc.fromDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate >= $fromDate
      - name: toDate
        label: reports.uc.toDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate <= $toDate
      - name: collectorname
        label: reports.uc.collectorname
        type: singlevaluelist
        pattern: http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=UC_EMP|$.Employees[*].user.id|$.Employees[*].user.name
        source: uc
        wrapper: true
        isMandatory: false
        searchClause: AND eg_user.id = $collectorname::INTEGER
    query: |
        -- Use CTE to force query plan, compute & use CTE later
        WITH receipt_breakup AS (
                    SELECT 
                      ba.billdetailid as receiptheader, 
                      SUM(CASE WHEN taxheadcode LIKE '%_CGST' THEN adjustedamount ELSE 0 END) as cgst, 
                      SUM(CASE WHEN taxheadcode LIKE '%_TAX' THEN adjustedamount ELSE 0 END) as tax, 
                      SUM(CASE WHEN taxheadcode LIKE '%_SGST' THEN adjustedamount ELSE 0 END) as sgst, 
                      SUM(CASE WHEN taxheadcode LIKE '%_FIELD_FEE' THEN adjustedamount ELSE 0 END) as fieldcollection            
                    FROM egcl_billaccountdetail as ba
                    INNER JOIN egcl_billdetial as bd on bd.id=ba.billdetailid
                    GROUP BY ba.billdetailid
        )
        SELECT DISTINCT
          rh.tenantid as ulb,
          bi.consumercode as receiptnumber,
          To_char((To_timestamp(rh.receiptdate / 1000) at time Zone 'Asia/Kolkata'), 'DD/MM/YYYY') as receiptdate,
          (select message from message where locale ='en_IN'and code =(CONCAT('BILLINGSERVICE_BUSINESSSERVICE_',UPPER(replace(replace(rh.businessservice,'-','_'),'.','_'))))) as Businesservice,
          receipt_breakup.*,
          (case when py.paymentmode like 'CASH' then '' else  transactionnumber end) as ddorchequenumber,
          bi.totalamount as TotalAmount,
          eg_user.name as collectorname,
          py.paymentmode as paymentMode,
          bi.status as status
        FROM egcl_payment as py
        JOIN egcl_paymentdetail AS rh ON py.id=rh.paymentid
        JOIN egcl_bill as bi ON bi.id=rh.billid
        JOIN egcl_billdetial as bd ON bd.billid=bi.id
        JOIN receipt_breakup ON bd.id = receipt_breakup.receiptheader
        JOIN egcl_billaccountdetail as ba ON bd.id=ba.billdetailid
        JOIN eg_user ON py.createdby::INTEGER=eg_user.id
        WHERE  bi.status = 'CANCELLED'  AND bi.consumercode like 'UC%'
        AND rh.tenantid=$tenantid AND rh.tenantid != 'uk.testing'
    orderby: ORDER BY receiptdate DESC

  - reportName: MiscReceiptULBShort
    summary: Receipt Register Miscellaneous
    version: 1.0.0
    moduleName: rainmaker-uc
    additionalConfig:
      print:
        pdfPageSize: "A3"
    sourceColumns:
      - name: consumername
        label: reports.uc.consumername
        type: string
        source: uc
        total: false
      - name: mobilenumber
        label: reports.uc.mobilenumber
        type: string
        source: uc
        total: false
      - name: receiptdate
        label: reports.uc.receiptdate
        type: string
        source: uc
        total: false
      - name: servicecategory
        label: reports.uc.businessdetails
        type: string
        source: uc
        total: false
      - name: amount
        label: reports.uc.totalamount
        type: string
        source: uc
        total: true
      - name: remarks
        label: reports.uc.remarks
        type: string
        source: uc
        total: false
      - name: collectorname
        label: reports.uc.collectorname
        type: string
        source: uc
        total: false
    searchParams:
      - name: fromDate
        label: reports.uc.fromDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate >= $fromDate
      - name: toDate
        label: reports.uc.toDate
        type: epoch
        source: uc
        isMandatory: false
        searchClause: AND rh.receiptdate <= $toDate
      - name: collectorname
        label: reports.uc.collectorname
        type: singlevaluelist
        pattern:  http://egov-hrms:8080/egov-hrms/employees/_search?tenantId=$tenantid&roles=UC_EMP|$.Employees[*].user.id|$.Employees[*].user.name
        source: uc
        wrapper: true
        isMandatory: false
        searchClause: AND eg_user.id = $collectorname::INTEGER
    query: |
        -- Use CTE to force query plan, compute & use CTE later
        select eg_user.name as collectorname,
        py.payername as consumername, 
        py.mobilenumber as mobilenumber,
        bi.totalamount as amount,
        (select message from message where locale ='en_IN'and code =(CONCAT('BILLINGSERVICE_BUSINESSSERVICE_',UPPER(replace(replace(rh.businessservice,'-','_'),'.','_'))))) as servicecategory,
        To_char((To_timestamp(rh.receiptdate / 1000) at time Zone 'Asia/Kolkata'), 'DD/MM/YYYY') as receiptdate, 
        rh.additionaldetails->>'comment' as remarks
        from egcl_payment py  JOIN egcl_paymentdetail AS rh ON py.id=rh.paymentid
        JOIN egcl_bill as bi ON bi.id=rh.billid 
        JOIN eg_user ON py.createdby::INTEGER=eg_user.id
        where bi.status != 'CANCELLED' AND bi.consumercode LIKE '%UC%
        AND rh.tenantid=$tenantid AND rh.tenantid != 'uk.testing'
    orderby: ORDER BY rh.receiptdate DESC;
